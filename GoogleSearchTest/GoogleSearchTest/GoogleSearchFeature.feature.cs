// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GoogleSearchTest
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Search on Google page")]
    public partial class SearchOnGooglePageFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GoogleSearchFeature.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Search on Google page", "\tIn order to search an answer on internet\r\n\tAs an internet user\r\n\tI want to searc" +
                    "h an item automatically with Google", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Controleer het zoekresultaat van een zoekopdracht via Google")]
        [NUnit.Framework.CategoryAttribute("GoogleIntakeTest")]
        [NUnit.Framework.TestCaseAttribute("google.com", "Specflow", "SpecFlow - Cucumber for .NET", new string[0])]
        [NUnit.Framework.TestCaseAttribute("google.com", "cucumber", "Cucumber", new string[0])]
        [NUnit.Framework.TestCaseAttribute("google.com", "nu.nl", "NU - Het laatste nieuws het eerst op NU.nl", new string[0])]
        [NUnit.Framework.TestCaseAttribute("google.com", "ad.nl", "AD.nl, het laatste nieuws uit binnen- en buitenland, sport en ...", new string[0])]
        [NUnit.Framework.TestCaseAttribute("google.com", "test", "Test - Wikipedia", new string[0])]
        public virtual void ControleerHetZoekresultaatVanEenZoekopdrachtViaGoogle(string website, string searchItem, string answer, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GoogleIntakeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Controleer het zoekresultaat van een zoekopdracht via Google", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given(string.Format("I navigate to the page {0}", website), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
    testRunner.And("I see the page is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Keyword"});
            table1.AddRow(new string[] {
                        string.Format("{0}", searchItem)});
#line 10
 testRunner.When("I enter Search Keyword in the Search Text box", ((string)(null)), table1, "When ");
#line 13
    testRunner.And("I click on Search Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.Then(string.Format("Search items {0} shows the items related to SpecFlow", answer), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
